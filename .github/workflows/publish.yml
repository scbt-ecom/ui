name: build-publish-to-npm
on:
  push:
    branches:
      - master

concurrency:
  group: 'pages'
  cancel-in-progress: false

jobs:
  build-ui:
    runs-on: ubuntu-22.04
    permissions: 
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Setup Node.js ⚙️ - Cache dependencies ⚡ - Install dependencies 🔧
        uses: ./.github/workflows/setup-node

      - name: Lint Code
        run: npm run lint

      - name: Build 🏗️
        run: npm run build

      - name: Generate JWT 🗝️
        id: generate-jwt
        env:
          SEMANTIC_APP_ID: ${{ secrets.SEMANTIC_APP_ID }}
          SEMANTIC_APP_PRIVATE_KEY: ${{ secrets.SEMANTIC_APP_PRIVATE_KEY }}
          SEMANTIC_APP_CLIENT_ID: ${{ secrets.SEMANTIC_APP_CLIENT_ID }}
          SEMANTIC_APP_CLIENT_SECRET: ${{ secrets.SEMANTIC_APP_CLIENT_SECRET }}
        run: |
          JWT=$(node -e "
            const fs = require('fs');
            const { createAppAuth } = require('@octokit/auth-app');
            
            const appId = process.env.SEMANTIC_APP_ID;
            const privateKey = process.env.SEMANTIC_APP_PRIVATE_KEY;
            const clientId = process.env.SEMANTIC_APP_CLIENT_ID;
            const clientSecret = process.env.SEMANTIC_APP_CLIENT_SECRET;
            
            const auth = createAppAuth({
            appId,
            privateKey,
            clientId,
            clientSecret
          });
            
            auth()
            .then(({ token }) => {
            fs.writeFileSync('../jwt.txt', token);
          })
            .catch((error) => {
            console.error(error);
            process.exit(1);
          });
          ")
          echo "::set-output name=jwt::$JWT"

      - name: Publish with Semantic Release 🚀
        env:
          JWT_TOKEN: ${{ steps.generate-jwt.outputs.jwt }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release
