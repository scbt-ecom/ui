{{ if and .Values.templates.deployment (eq .Values.templates.deployment "true") }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "obj.fullname" . }}
  labels:
    app: {{ .Values.labels.app }}
    component: {{ .Values.labels.component }}
    release: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.labels.app }}
      component: {{ .Values.labels.component }}
      release: {{ .Release.Name }}
  template:
    metadata:
      name: {{ template "obj.fullname" . }}
      labels:
        app: {{ .Values.labels.app }}
        component: {{ .Values.labels.component }}
        release: {{ .Release.Name }}
    spec:
      containers:
      - image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: Always
        name: {{ .Release.Name }}
        env:
        {{- range $key, $value := .Values.env }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{- end }}
        ports:
        - containerPort: {{ .Values.service.internalPort }}
          name: "tcp-port"
          protocol: TCP
      {{ if .Values.volumeMounts.path }}
        volumeMounts:
        - name: {{ template "obj.fullname" . }}
          mountPath: {{ .Values.volumeMounts.path }}
      volumes:
      - name: {{ template "obj.fullname" . }}
        configMap:
          name: {{ template "obj.fullname" . }}
          items:
          - key: default.conf
            path: default.conf
      {{ end }}
      imagePullSecrets:
      - name: docker-registry-secret
      dnsConfig:
        options:
        - name: ndots
          value: "2"
        - name: single-request-reopen
---
{{ end }}